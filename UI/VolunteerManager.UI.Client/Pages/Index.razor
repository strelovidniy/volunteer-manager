@page "/"

@using Microsoft.AspNetCore.Components.Web
@using MudBlazor
@using VolunteerManager.Data.Enums

<PageTitle>
    VOLUNTERRA
</PageTitle>

@if (_isPageLoading)
{
    <div class="loader-container">
        <MudProgressCircular Color="Color.Primary" 
                             Style="height: 10%; width: 10%;" 
                             Indeterminate="true"/>
    </div>
}
else
{
    @if (_currentUser?.Organization == null)
    {
        <div class="tabs">
            <MudTabs Elevation="0" 
                     Rounded="true" 
                     ApplyEffectsToContainer="true" 
                     PanelClass="pa-6"
                     Centered="true"
                     Color="Color.Transparent"
                     @bind-ActivePanelIndex="_selectedIndex">
                <MudTabPanel Text="All"/>
                <MudTabPanel Text="For me"/>
            </MudTabs>
        </div>
        <div class="filters">
            <MudExpansionPanel Text="Show filters"
                               IsExpanded="true">
                <div class="d-flex flex-row">
                    <MudButton Color="Color.Success"
                               Variant="Variant.Filled"
                               Size="Size.Large"
                               Style="width: 150px;
                                      margin-top: 15px;
                                      margin-right: 15px;"
                               OnClick="@(async () => { _categoryFilter = null; await ReloadDataAsync(); })"
                               Disabled="_processing">
                        All
                    </MudButton>
                    <MudButton Color="Color.Success"
                               Variant="Variant.Outlined"
                               Size="Size.Large"
                               Style="width: 150px;
                                      margin-top: 15px;
                                      margin-right: 15px;"
                               OnClick="@(async () => { _categoryFilter = OrganizationRequestCategory.Donation; await ReloadDataAsync(); })"
                               Disabled="_processing">
                        Donation
                    </MudButton>
                    <MudButton Color="Color.Success"
                               Variant="Variant.Outlined"
                               Size="Size.Large"
                               Style="width: 150px;
                                      margin-top: 15px;
                                      margin-right: 15px;"
                               OnClick="@(async () => { _categoryFilter = OrganizationRequestCategory.Humanitarian; await ReloadDataAsync(); })"
                               Disabled="_processing">
                        Humanitarian
                    </MudButton>
                    <MudButton Color="Color.Success"
                               Variant="Variant.Outlined"
                               Size="Size.Large"
                               Style="width: 150px;
                                      margin-top: 15px;
                                      margin-right: 15px;"
                               OnClick="@(async () => { _categoryFilter = OrganizationRequestCategory.Work; await ReloadDataAsync(); })"
                               Disabled="_processing">
                        Work
                    </MudButton>
                    <MudButton Color="Color.Success"
                               Variant="Variant.Outlined"
                               Size="Size.Large"
                               Style="width: 150px;
                                      margin-top: 15px;
                                      margin-right: 15px;"
                               OnClick="@(async () => { _categoryFilter = OrganizationRequestCategory.Other; await ReloadDataAsync(); })"
                               Disabled="_processing">
                        Other
                    </MudButton>
                </div>
                <div class="d-flex flex-row">
                    <MudButton Color="Color.Success"
                               Variant="Variant.Filled"
                               Size="Size.Large"
                               Style="width: 150px;
                                      margin-top: 15px;
                                      margin-right: 15px;"
                               OnClick="@(async () => { _locationFilter = null; await ReloadDataAsync(); })"
                               Disabled="_processing">
                        All
                    </MudButton>
                </div>
            </MudExpansionPanel>
        </div>
    }
    else
    {
        <div class="tabs">
            <MudTabs Elevation="0"
                     Rounded="true"
                     ApplyEffectsToContainer="true"
                     PanelClass="pa-6"
                     Centered="true"
                     Color="Color.Transparent"
                     @bind-ActivePanelIndex="_selectedIndex">
                <MudTabPanel Text="My Events" />
                <MudTabPanel Text="Other organizations" />
            </MudTabs>
        </div>
        @if (_selectedIndex == 0)
        {
            <div class="d-flex flex-row align-center justify-center">
                <MudButton Style="border-radius: 26px;"
                           OnClick="@(() => NavigationManager.NavigateTo("/create-new-event"))">
                    <MudContainer Class="d-flex flex-row">
                        <MudAvatar Color="Color.Success"
                                   Style="margin-right: 20px;
                                          margin-top: -4px;">
                            <MudIcon Icon="@Icons.Material.Outlined.Add"
                                     Style="color: white;"/>
                        </MudAvatar>
                        <MudText Typo="Typo.h4">
                            Add new event
                        </MudText>
                    </MudContainer>
                </MudButton>
            </div>
        }
    }

    @foreach (var item in _organizationRequests.GroupBy(x => x.Category).Select(x => new
    {
        x.Key,
        x
    }))
    {
        <MudExpansionPanel Text="Show filters"
                           IsExpanded="true">
            <TitleContent>
                <div class="d-flex">
                    <MudText>
                        @item.Key
                    </MudText>
                </div>
            </TitleContent>
            <ChildContent>
                <div class="req-items">
                    @for (var i = 0; i < item.x.Count(); ++i)
                    {
                        var req = item.x.ElementAt(i);
                        
                        <div class="@("req-item" + (i % 3 == 0 ? " large-item" : string.Empty))"
                             style="@($"background-image: linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url({GetImageUrl()});")">
                            <MudText Typo="Typo.h3"
                                     Style="color: white;
                                            margin-bottom: 35px;">
                                @req.Title
                            </MudText>
                            <MudText Style="font-size: 16px; 
                                            font-weight: 400;
                                            margin-bottom: 40px;
                                            color: white;">
                                @req.Location
                            </MudText>
                            <MudText Style="color: white">
                                @req.Description
                            </MudText>
                            <div class="d-flex flex-row bottom-item-bar">
                                <MudButton Color="Color.Success"
                                           Variant="Variant.Filled"
                                           Size="Size.Large"
                                           Style="width: 250px;
                                                  margin-top: 15px;
                                                  color: white;
                                                  border-radius: 10px;">
                                    @req.RequestDate.ToLongDateString()
                                </MudButton>
                                <MudSpacer/>
                                <MudIconButton Icon="@Icons.Material.Outlined.ArrowForward"
                                               Size="Size.Large"
                                               Style="width: 50px;
                                                      height: 50px;
                                                      margin-top: 15px;
                                                      color: white;"/>
                            </div>
                        </div>
                    }
                </div>
            </ChildContent>
        </MudExpansionPanel>
    }
}